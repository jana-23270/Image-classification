# -*- coding: utf-8 -*-
"""Simple image classification using neural network.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-IVsbW2pd7QTuh8DjoiiETavYeZVHiHm
"""

!pip install tensorflow

import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers

mnist = keras.datasets.mnist
(x_train,y_train),(x_test,y_test) = mnist.load_data()
x_train,x_test = x_train/255.0,x_test/255.0

import matplotlib.pyplot as plt
plt.imshow(x_train[9])

y_train[9]

model = keras.Sequential([
    layers.Flatten(input_shape=(28,28)),
    layers.Dense(128 , activation='relu'),
    layers.Dense(10, activation='softmax')
])

model.compile( optimizer='adam',
              loss = 'sparse_categorical_crossentropy',
               metrics=['accuracy'])

history = model.fit(x_train,y_train, epochs = 5)

y_pred=model.predict(x_test)

y_pred[12]

import numpy as np
y_pred1 = np.argmax(y_pred, axis=1)
y_pred1[12]

y_test[12]

plt.imshow(x_test[12])

plt.imshow(x_test[12], cmap="gray")
plt.title(f"y_test: {y_test[12]}, y_pred: {y_test[12]}")

from sklearn.metrics import accuracy_score

accuracy_score(y_pred1,y_test)

from sklearn.metrics import confusion_matrix
confusion_matrix(y_pred1,y_test)